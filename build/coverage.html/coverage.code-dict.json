{"/home/travis/build/kaizhu256/node-itunes-search-lite/test.js":"/* istanbul instrument in package itunes_search */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // re-init local\n        local = local.global.local = (local.global.utility2 ||\n            require('utility2')).requireReadme();\n        // init test\n        local.testRunInit(local);\n    }());\n}());\n","/home/travis/build/kaizhu256/node-itunes-search-lite/lib.itunes_search.js":"/* istanbul instrument in package itunes_search */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.itunes_search = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_itunes_search = local;\n        } else {\n            // require builtins\n            Object.keys(process.binding('natives')).forEach(function (key) {\n                if (!local[key] && !(/\\/|^_|^sys$/).test(key)) {\n                    local[key] = require(key);\n                }\n            });\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n\n\n\n    // run shared js-env code - function-before\n    /* istanbul ignore next */\n    (function () {\n        local.ajax = function (options, onError) {\n        /*\n         * this function will send an ajax-request with error-handling and timeout\n         * example usage:\n            local.ajax({\n                method: 'GET',\n                url: '/index.html'\n            }, function (error, xhr) {\n                console.log(xhr.responseText);\n                console.log(xhr.statusCode);\n            });\n         */\n            var tmp, xhr;\n            // init standalone handling-behavior\n            local.nop = local.nop || function () {\n                return;\n            };\n            local.ajaxForwardProxyUrlTest = local.ajaxForwardProxyUrlTest || local.nop;\n            local.ajaxProgressCounter = local.ajaxProgressCounter || 0;\n            local.ajaxProgressUpdate = local.ajaxProgressUpdate || local.nop;\n            local.bufferToNodeBuffer = local.bufferToNodeBuffer || local.nop;\n            local.bufferToString = local.bufferToString || local.nop;\n            local.errorMessagePrepend = local.errorMessagePrepend || local.nop;\n            local.onErrorWithStack = local.onErrorWithStack || function (arg) {\n                return arg;\n            };\n            local.serverLocalUrlTest = local.serverLocalUrlTest || local.nop;\n            local.streamListCleanup = local.streamListCleanup || local.nop;\n            local.timeoutDefault = local.timeoutDefault || 30000;\n            local.tryCatchOnError = local.tryCatchOnError || local.nop;\n            // init onError\n            onError = local.onErrorWithStack(onError);\n            // init xhr\n            xhr = local.modeJs === 'node' || local.serverLocalUrlTest(options.url)\n                ? new local._http.XMLHttpRequest()\n                : new window.XMLHttpRequest();\n            // debug xhr\n            local._debugXhr = xhr;\n            // init options\n            Object.keys(options).forEach(function (key) {\n                if (options[key] !== undefined) {\n                    xhr[key] = options[key];\n                }\n            });\n            // init headers\n            xhr.headers = {};\n            Object.keys(options.headers || {}).forEach(function (key) {\n                xhr.headers[key.toLowerCase()] = options.headers[key];\n            });\n            // init method\n            xhr.method = xhr.method || 'GET';\n            // init timeStart\n            xhr.timeStart = Date.now();\n            // init timeout\n            xhr.timeout = xhr.timeout || local.timeoutDefault;\n            // init timerTimeout\n            xhr.timerTimeout = setTimeout(function () {\n                xhr.error = xhr.error || new Error('onTimeout - timeout-error - ' +\n                    xhr.timeout + ' ms - ' + 'ajax ' + xhr.method + ' ' + xhr.url);\n                xhr.abort();\n                // cleanup requestStream and responseStream\n                local.streamListCleanup([xhr.requestStream, xhr.responseStream]);\n            }, xhr.timeout | 0);\n            // init event handling\n            xhr.onEvent = function (event) {\n                // init statusCode\n                xhr.statusCode = xhr.status;\n                switch (event.type) {\n                case 'abort':\n                case 'error':\n                case 'load':\n                    // do not run more than once\n                    if (xhr.isDone) {\n                        return;\n                    }\n                    xhr.isDone = true;\n                    // debug ajaxResponse\n                    if (xhr.modeDebug) {\n                        console.error({\n                            type: 'ajaxResponse',\n                            time: new Date(xhr.timeStart).toISOString(),\n                            method: xhr.method,\n                            url: xhr.url,\n                            statusCode: xhr.statusCode,\n                            duration: Date.now() - xhr.timeStart,\n                            // extra\n                            headers: xhr.headers,\n                            data: xhr.data && xhr.data.slice &&\n                                local.bufferToString(xhr.data.slice(0, 256)),\n                            responseText: local.tryCatchOnError(function () {\n                                return xhr.responseText.slice(0, 256);\n                            }, local.nop)\n                        });\n                    }\n                    // cleanup timerTimeout\n                    clearTimeout(xhr.timerTimeout);\n                    // cleanup requestStream and responseStream\n                    setTimeout(function () {\n                        local.streamListCleanup([xhr.requestStream, xhr.responseStream]);\n                    });\n                    // decrement ajaxProgressCounter\n                    local.ajaxProgressCounter -= 1;\n                    // handle abort or error event\n                    if (!xhr.error &&\n                            (event.type === 'abort' ||\n                            event.type === 'error' ||\n                            xhr.statusCode >= 400)) {\n                        xhr.error = new Error(event.type);\n                    }\n                    // handle completed xhr request\n                    if (xhr.readyState === 4) {\n                        // handle string data\n                        if (xhr.error) {\n                            // debug statusCode\n                            xhr.error.statusCode = xhr.statusCode;\n                            // debug statusCode / method / url\n                            tmp = local.modeJs + ' - ' + xhr.statusCode + ' ' + xhr.method +\n                                ' ' + xhr.url + '\\n';\n                            // try to debug responseText\n                            local.tryCatchOnError(function () {\n                                tmp += '    ' + JSON.stringify(xhr.responseText.slice(0, 256) +\n                                    '...') + '\\n';\n                            }, local.nop);\n                            local.errorMessagePrepend(xhr.error, tmp);\n                        }\n                    }\n                    onError(xhr.error, xhr);\n                    break;\n                }\n                local.ajaxProgressUpdate();\n            };\n            // increment ajaxProgressCounter\n            local.ajaxProgressCounter += 1;\n            xhr.addEventListener('abort', xhr.onEvent);\n            xhr.addEventListener('error', xhr.onEvent);\n            xhr.addEventListener('load', xhr.onEvent);\n            xhr.addEventListener('loadstart', local.ajaxProgressUpdate);\n            xhr.addEventListener('progress', local.ajaxProgressUpdate);\n            xhr.upload.addEventListener('progress', local.ajaxProgressUpdate);\n            // open url\n            xhr.forwardProxyUrl = local.modeJs === 'browser' &&\n                (/^https{0,1}:/).test(xhr.url) &&\n                xhr.url.indexOf(location.protocol + '//' + location.host) !== 0 &&\n                local.ajaxForwardProxyUrlTest(xhr.url, location);\n            if (xhr.forwardProxyUrl) {\n                xhr.open(xhr.method, xhr.forwardProxyUrl);\n                xhr.setRequestHeader('forward-proxy-headers', JSON.stringify(xhr.headers));\n                xhr.setRequestHeader('forward-proxy-url', xhr.url);\n            } else {\n                xhr.open(xhr.method, xhr.url);\n            }\n            Object.keys(xhr.headers).forEach(function (key) {\n                xhr.setRequestHeader(key, xhr.headers[key]);\n            });\n            if (local.FormData && xhr.data instanceof local.FormData) {\n                // handle formData\n                xhr.data.read(function (error, data) {\n                    if (error) {\n                        xhr.error = xhr.error || error;\n                        xhr.onEvent({ type: 'error' });\n                        return;\n                    }\n                    // send data\n                    xhr.send(local.bufferToNodeBuffer(data));\n                });\n            } else {\n                // send data\n                xhr.send(local.bufferToNodeBuffer(xhr.data));\n            }\n            return xhr;\n        };\n\n        local.ajaxProgressUpdate = function () {\n        /*\n         * this function will update ajaxProgress\n         */\n            var ajaxProgressDiv1;\n            ajaxProgressDiv1 = local.modeJs === 'browser' &&\n                document.querySelector('#ajaxProgressDiv1');\n            if (!ajaxProgressDiv1) {\n                return;\n            }\n            // init ajaxProgressDiv1StyleBackground\n            local.ajaxProgressDiv1StyleBackground = local.ajaxProgressDiv1StyleBackground ||\n                ajaxProgressDiv1.style.background;\n            // show ajaxProgress\n            ajaxProgressDiv1.style.background = local.ajaxProgressDiv1StyleBackground;\n            // increment ajaxProgress\n            if (local.ajaxProgressCounter > 0) {\n                // this algorithm will indefinitely increment the ajaxProgressBar\n                // with successively smaller increments without ever reaching 100%\n                local.ajaxProgressState += 1;\n                ajaxProgressDiv1.style.width = Math.max(\n                    100 - 75 * Math.exp(-0.125 * local.ajaxProgressState),\n                    Number(ajaxProgressDiv1.style.width.slice(0, -1)) || 0\n                ) + '%';\n            } else {\n                // finish ajaxProgress\n                ajaxProgressDiv1.style.width = '100%';\n            }\n            // cleanup timerTimeout\n            clearTimeout(local.timerTimeoutAjaxProgressHide);\n            // hide ajaxProgress\n            local.timerTimeoutAjaxProgressHide = setTimeout(function () {\n                ajaxProgressDiv1.style.background = 'transparent';\n                local.ajaxProgressCounter = 0;\n                local.ajaxProgressState = 0;\n                // reset ajaxProgress\n                setTimeout(function () {\n                    // coverage-hack - ignore else-statement\n                    local.nop(!local.ajaxProgressState && (function () {\n                        ajaxProgressDiv1.style.width = '0%';\n                    }()));\n                }, 500);\n            }, local.ajaxProgressCounter > 0\n                ? local.timeoutDefault\n                : 1500);\n        };\n\n        local.assert = function (passed, message) {\n        /*\n         * this function will throw the error message if passed is falsey\n         */\n            var error;\n            if (passed) {\n                return;\n            }\n            error = message && message.message\n                // if message is an error-object, then leave it as is\n                ? message\n                : new Error(typeof message === 'string'\n                    // if message is a string, then leave it as is\n                    ? message\n                    // else JSON.stringify message\n                    : JSON.stringify(message));\n            throw error;\n        };\n\n        local.nop = function () {\n        /*\n         * this function will do nothing\n         */\n            return;\n        };\n\n        local.objectSetDefault = function (arg, defaults, depth) {\n        /*\n         * this function will recursively set defaults for undefined-items in the arg\n         */\n            arg = arg || {};\n            defaults = defaults || {};\n            Object.keys(defaults).forEach(function (key) {\n                var arg2, defaults2;\n                arg2 = arg[key];\n                // handle misbehaving getter\n                try {\n                    defaults2 = defaults[key];\n                } catch (ignore) {\n                }\n                if (defaults2 === undefined) {\n                    return;\n                }\n                // init arg[key] to default value defaults[key]\n                if (!arg2) {\n                    arg[key] = defaults2;\n                    return;\n                }\n                // if arg2 and defaults2 are both non-null and non-array objects,\n                // then recurse with arg2 and defaults2\n                if (depth > 1 &&\n                        // arg2 is a non-null and non-array object\n                        arg2 &&\n                        typeof arg2 === 'object' &&\n                        !Array.isArray(arg2) &&\n                        // defaults2 is a non-null and non-array object\n                        defaults2 &&\n                        typeof defaults2 === 'object' &&\n                        !Array.isArray(defaults2)) {\n                    // recurse\n                    local.objectSetDefault(arg2, defaults2, depth - 1);\n                }\n            });\n            return arg;\n        };\n\n        local.onErrorWithStack = function (onError) {\n        /*\n         * this function will create a new callback that will call onError,\n         * and append the current stack to any error\n         */\n            var stack;\n            stack = new Error().stack.replace((/(.*?)\\n.*?$/m), '$1');\n            return function (error, data, meta) {\n                if (error &&\n                        error !== local.errorDefault &&\n                        String(error.stack).indexOf(stack.split('\\n')[2]) < 0) {\n                    // append the current stack to error.stack\n                    error.stack += '\\n' + stack;\n                }\n                onError(error, data, meta);\n            };\n        };\n\n        local.onNext = function (options, onError) {\n        /*\n         * this function will wrap onError inside the recursive function options.onNext,\n         * and append the current stack to any error\n         */\n            options.onNext = local.onErrorWithStack(function (error, data, meta) {\n                try {\n                    options.modeNext = error && !options.modeErrorIgnore\n                        ? Infinity\n                        : options.modeNext + 1;\n                    onError(error, data, meta);\n                } catch (errorCaught) {\n                    // throw errorCaught to break infinite recursion-loop\n                    if (options.errorCaught) {\n                        throw options.errorCaught;\n                    }\n                    options.errorCaught = errorCaught;\n                    options.onNext(errorCaught, data, meta);\n                }\n            });\n            return options;\n        };\n\n        local.templateRender = function (template, dict) {\n        /*\n         * this function will render the template with the given dict\n         */\n            var argList, getValue, match, renderPartial, rgx, value;\n            dict = dict || {};\n            getValue = function (key) {\n                argList = key.split(' ');\n                value = dict;\n                // iteratively lookup nested values in the dict\n                argList[0].split('.').forEach(function (key) {\n                    value = value && value[key];\n                });\n                return value;\n            };\n            renderPartial = function (match0, helper, key, partial) {\n                switch (helper) {\n                case 'each':\n                    value = getValue(key);\n                    return Array.isArray(value)\n                        ? value.map(function (dict) {\n                            // recurse with partial\n                            return local.templateRender(partial, dict);\n                        }).join('')\n                        : '';\n                case 'if':\n                    partial = partial.split('{{#unless ' + key + '}}');\n                    partial = getValue(key)\n                        ? partial[0]\n                        // handle 'unless' case\n                        : partial.slice(1).join('{{#unless ' + key + '}}');\n                    // recurse with partial\n                    return local.templateRender(partial, dict);\n                case 'unless':\n                    return getValue(key)\n                        ? ''\n                        // recurse with partial\n                        : local.templateRender(partial, dict);\n                default:\n                    // recurse with partial\n                    return match0[0] + local.templateRender(match0.slice(1), dict);\n                }\n            };\n            // render partials\n            rgx = (/\\{\\{#(\\w+) ([^}]+?)\\}\\}/g);\n            template = template || '';\n            for (match = rgx.exec(template); match; match = rgx.exec(template)) {\n                rgx.lastIndex += 1 - match[0].length;\n                template = template.replace(\n                    new RegExp('\\\\{\\\\{#(' + match[1] + ') (' + match[2] +\n                        ')\\\\}\\\\}([\\\\S\\\\s]*?)\\\\{\\\\{/' + match[1] + ' ' + match[2] +\n                        '\\\\}\\\\}'),\n                    renderPartial\n                );\n            }\n            // search for keys in the template\n            return template.replace((/\\{\\{[^}]+?\\}\\}/g), function (match0) {\n                getValue(match0.slice(2, -2));\n                if (value === undefined) {\n                    return match0;\n                }\n                argList.slice(1).forEach(function (arg) {\n                    switch (arg) {\n                    case 'alphanumeric':\n                        value = value.replace((/\\W/g), '_');\n                        break;\n                    case 'decodeURIComponent':\n                        value = decodeURIComponent(value);\n                        break;\n                    case 'encodeURIComponent':\n                        value = encodeURIComponent(value);\n                        break;\n                    case 'htmlSafe':\n                        value = value.replace((/[\"&'<>]/g), function (match0) {\n                            return '&#x' + match0.charCodeAt(0).toString(16) + ';';\n                        });\n                        break;\n                    case 'jsonStringify':\n                        value = JSON.stringify(value);\n                        break;\n                    case 'jsonStringify4':\n                        value = JSON.stringify(value, null, 4);\n                        break;\n                    case 'markdownCodeSafe':\n                        value = value.replace((/`/g), '\\'');\n                        break;\n                    default:\n                        value = value[arg]();\n                        break;\n                    }\n                });\n                return String(value);\n            });\n        };\n\n        local.tryCatchOnError = function (fnc, onError) {\n        /*\n         * this function will try to run the fnc in a try-catch block,\n         * else call onError with the errorCaught\n         */\n            // validate onError\n            local.assert(typeof onError === 'function', typeof onError);\n            try {\n                // reset errorCaught\n                local._debugTryCatchErrorCaught = null;\n                return fnc();\n            } catch (errorCaught) {\n                // debug errorCaught\n                local._debugTryCatchErrorCaught = errorCaught;\n                return onError(errorCaught);\n            }\n        };\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        local.uiAnimateScrollTo = function (element) {\n        /*\n         * this function will scrollTo the element\n         */\n            var dy, fps, scrollTopOld, stop, timerInterval, timeout, tmp;\n            fps = 50;\n            timeout = 1000;\n            stop = function () {\n                clearInterval(timerInterval);\n            };\n            timerInterval = setInterval(function () {\n                dy = 2000 * (element.offsetTop - document.body.scrollTop) / (fps * timeout);\n                tmp = (document.body.scrollTop - scrollTopOld) || dy;\n                // stop if very little to scroll\n                if (Math.abs(dy * fps * timeout / 2000) <= 20 ||\n                        // stop if user interrupts scrolling\n                        Math.sign(tmp) !== Math.sign(dy) ||\n                        Math.abs(tmp) > 2 * Math.abs(dy)) {\n                    stop();\n                    return;\n                }\n                scrollTopOld = document.body.scrollTop;\n                document.body.scrollTop += dy;\n            }, 1000 / fps);\n            setTimeout(stop, timeout);\n        };\n\n        local.uiAnimateSlideDown = function (element, callback) {\n        /*\n         * this function will slideDown the dom-element\n         */\n            element.style.maxHeight = '0';\n            setTimeout(function () {\n                element.style.borderBottom = '';\n                element.style.borderTop = '';\n                element.style.display = '';\n                element.style.marginBottom = '';\n                element.style.marginTop = '';\n                element.style.maxHeight = 1.5 * local.global.innerHeight + 'px';\n                element.style.paddingBottom = '';\n                element.style.paddingTop = '';\n                setTimeout(function () {\n                    element.style.maxHeight = '65535px';\n                    callback();\n                }, 500);\n            }, 50);\n        };\n\n        local.uiAnimateSlideUp = function (element, callback) {\n        /*\n         * this function will slideUp the dom-element\n         */\n            element.style.borderBottom = '0';\n            element.style.borderTop = '0';\n            element.style.marginBottom = '0';\n            element.style.marginTop = '0';\n            element.style.maxHeight = '0';\n            element.style.paddingBottom = '0';\n            element.style.paddingTop = '0';\n            element.style.display = '';\n            setTimeout(function () {\n                callback();\n            }, 500);\n        };\n\n        local.uiEventDelegate = function (event) {\n            Object.keys(local.uiEventListenerDict).sort().some(function (key) {\n                if (!(event.currentTarget.matches(key) || event.target.matches(key))) {\n                    return;\n                }\n                switch (event.target.tagName) {\n                case 'A':\n                case 'BUTTON':\n                case 'FORM':\n                    event.preventDefault();\n                    break;\n                }\n                event.stopPropagation();\n                local.uiEventListenerDict[key](event);\n                return true;\n            });\n        };\n\n        local.uiEventInit = function (element) {\n        /*\n         * this function will init event-handling for the dom-element\n         */\n            ['Change', 'Click', 'Submit'].forEach(function (eventType) {\n                Array.from(\n                    element.querySelectorAll('.eventDelegate' + eventType)\n                ).forEach(function (element) {\n                    element.addEventListener(eventType.toLowerCase(), local.uiEventDelegate);\n                });\n            });\n        };\n\n        local.uiEventListenerDict = {};\n\n        local.uiEventListenerDict['.onEventUiCardExpand'] = function (options) {\n        /*\n         * this function will expand the cardSelected\n         */\n            if (options.target.href) {\n                window.open(options.target.href, '_blank');\n                return;\n            }\n            local.cardSelected = options.target.closest('.card') || options.target;\n            if (!local.cardSelected.classList.contains('card')) {\n                return;\n            }\n            if (document.querySelector('.cardSelected') === local.cardSelected) {\n                return;\n            }\n            Array.from(document.querySelectorAll('.cardSelected')).forEach(function (element) {\n                element.classList.remove('cardSelected');\n            });\n            local.cardSelected.classList.add('cardSelected');\n            local.cardExpandedList[1].querySelector(\n                '.cardExpandedContent'\n            ).innerHTML = local.templateRender(\n/* jslint-ignore-begin */\n'\\\n<table>\\n\\\n    <tr class=\"price\"><td>Price:</td><td><a \\n\\\n        href=\"{{trackViewUrl htmlSafe}}\" \\n\\\n        target=\"_blank\" \\n\\\n    >{{trackPriceFormatted htmlSafe}}</a>\\n\\\n    </td></tr>\\n\\\n    <tr class=\"title\"><td>Title:</td><td>{{trackName htmlSafe}}</td></tr>\\n\\\n    <tr class=\"artist\"><td>Artist:</td><td>{{artistName htmlSafe}}</td></tr>\\n\\\n    <tr class=\"date\"><td>Release Date:</td><td>{{releaseDate htmlSafe}}</td></tr>\\n\\\n    <tr class=\"description\"><td>Description:</td><td>{{longDescription htmlSafe}}</td></tr>\\n\\\n</table>\\n\\\n',\n/* jslint-ignore-end */\n                local.data.results[local.cardSelected.dataset.ii]\n            );\n            Array.from(\n                document.querySelectorAll('.grid > *')\n            ).some(function (element, ii, list) {\n                if (element.offsetTop <= local.cardSelected.offsetTop && ii + 1 < list.length) {\n                    return;\n                }\n                if (element === local.cardExpandedList[0]) {\n                    local.cardExpandedList[0]\n                        .querySelector('.cardExpandedContent')\n                        .innerHTML = local.cardExpandedList[1]\n                            .querySelector('.cardExpandedContent')\n                            .innerHTML;\n                    return true;\n                }\n                local.cardExpandedList.reverse();\n                local.uiAnimateSlideUp(local.cardExpandedList[1], function () {\n                    local.cardExpandedList[1].parentNode\n                        .removeChild(local.cardExpandedList[1]);\n                });\n                if (ii + 1 === list.length) {\n                    element.parentElement.appendChild(local.cardExpandedList[0]);\n                } else {\n                    local.cardSelected.parentElement\n                        .insertBefore(local.cardExpandedList[0], element);\n                }\n                local.uiAnimateScrollTo(local.cardSelected);\n                return true;\n            });\n            local.cardExpandedList[0].querySelector('.cardExpandedArrow').style.marginLeft =\n                (local.cardSelected.offsetLeft +\n                0.5 * local.cardSelected.offsetWidth - 15) + 'px';\n            local.uiAnimateSlideDown(local.cardExpandedList[0], local.nop);\n            return options;\n        };\n\n        local.uiEventListenerDict['.onEventUiReload'] = function (options) {\n        /*\n         * this function will reload the ui\n         */\n            local.onNext(options, function (error, data) {\n                switch (options.modeNext) {\n                case 1:\n                    if (options.currentTarget.classList.contains('searchMediaA')) {\n                        localStorage.utility2_itunes_search_searchMedia =\n                            local.searchMediaDict[options.currentTarget.hash] || '#movie';\n                        Array.from(document.querySelectorAll('.searchMediaA'))\n                            .forEach(function (element) {\n                                if (element.hash ===\n                                        localStorage.utility2_itunes_search_searchMedia) {\n                                    element.classList.add('searchMediaASelected');\n                                } else {\n                                    element.classList.remove('searchMediaASelected');\n                                }\n                            });\n                    }\n                    localStorage.utility2_itunes_search_searchTerm =\n                        document.querySelector('.searchTermInput').value || '';\n                    // abort previous fetch request\n                    local.ajax1.abort();\n                    local.ajax1 = local.ajax({ headers: {\n                        'forward-proxy-url': 'https://itunes.apple.com/search?' +\n                            'limit=24' +\n                            '&media=' +\n                                localStorage.utility2_itunes_search_searchMedia.slice(1) +\n                            '&term=' + (localStorage.utility2_itunes_search_searchTerm\n                                .replace((/\\s+/g), '+') || 'the')\n                    }, url: 'https://h1-proxy1.herokuapp.com/' }, options.onNext);\n                    break;\n                case 2:\n                    local.data = JSON.parse(data.responseText);\n                    local.uiEventListenerDict['.onEventUiRender']();\n                    break;\n                default:\n                    throw error;\n                }\n            });\n            options.modeNext = 0;\n            options.onNext();\n        };\n\n        local.uiEventListenerDict['.onEventUiRender'] = function () {\n        /*\n         * this function will render the ui\n         */\n            var key, options;\n            options = local.data;\n            if (!(options && options.results && options.results.length)) {\n                document.querySelector('.grid').innerHTML =\n                    '<div style=\"margin: 1rem;\">No results</div>';\n                return;\n            }\n            localStorage.utility2_itunes_search_searchSort =\n                document.querySelector('.searchSortSelect').selectedIndex;\n            // normalize\n            options.results.forEach(function (element) {\n                local.objectSetDefault(element, {\n                    artistName: 'N/A',\n                    longDescription: 'No description',\n                    trackName: 'N/A',\n                    trackViewUrl: ''\n                });\n                element.releaseDateFormatted = element.releaseDate\n                    ? new Date(element.releaseDate).toString()\n                    : 'N/A';\n                element.releaseYear = element.releaseDate\n                    ? element.releaseDate.slice(0, 4)\n                    : 'N/A';\n                element.trackPrice2 = Number(element.trackPrice) >= 0\n                    ? Number(element.trackPrice)\n                    : Number(element.collectionPrice);\n                element.trackPriceFormatted = element.trackPrice2 && element.currency\n                    ? element.trackPrice2 + ' ' + element.currency\n                    : 'N/A';\n            });\n            // sort\n            key = document.querySelector('.searchSortSelect').selectedOptions[0].dataset.value;\n            options.results.sort(function (aa, bb) {\n                aa = aa[key];\n                bb = bb[key];\n                if (key === 'releaseDate') {\n                    return aa >= bb\n                        ? -1\n                        : 1;\n                }\n                return aa <= bb\n                    ? -1\n                    : 1;\n            });\n            options.results.forEach(function (element, ii) {\n                element.ii = ii;\n            });\n            local.cardExpandedList[0].querySelector('.cardExpandedArrow').style.top = '';\n            document.querySelector('.grid').innerHTML = local.templateRender(\n/* jslint-ignore-begin */\n'\\\n{{#each results}}\\n\\\n    <div class=\"card uiAnimateZoomIn\" data-ii=\"{{ii}}\" style=\"display: none;\">\\n\\\n        <img src=\"{{artworkUrl100 htmlSafe}}\">\\n\\\n        <div class=\"price\">{{trackPriceFormatted htmlSafe}}</div>\\n\\\n        <div class=\"title\">{{trackName htmlSafe}}</div>\\n\\\n        <div class=\"artist\">{{artistName htmlSafe}}</div>\\n\\\n        <div class=\"date\">{{releaseYear htmlSafe}}</div>\\n\\\n    </div>\\n\\\n{{/each results}}\\n\\\n',\n/* jslint-ignore-end */\n                options\n            );\n            Array.from(\n                document.querySelectorAll('.card')\n            ).forEach(function (element, ii) {\n                setTimeout(function () {\n                    element.style.display = '';\n                }, ii * 50);\n            });\n        };\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - init-after\n    case 'browser':\n        local.global.local = local;\n        local.ajax1 = { abort: local.nop };\n        local.cardExpandedList = Array.from(\n            document.querySelectorAll('.cardExpanded')\n        ).map(function (element) {\n            local.uiAnimateSlideUp(element, local.nop);\n            return element;\n        });\n        local.searchMediaDict = {\n            '#movie': '#movie',\n            '#music': '#music',\n            '#musicVideo': '#musicVideo',\n            '#podcast': '#podcast'\n        };\n        local.timeoutDefault = 30000;\n        // init event-handling\n        local.uiEventInit(document.body);\n        // init state\n        local.tryCatchOnError(function () {\n            localStorage.utility2_itunes_search_test = JSON.stringify(Object.keys(local));\n            delete localStorage.utility2_itunes_search_test;\n        }, function () {\n            localStorage.clear();\n        });\n        localStorage.utility2_itunes_search_searchMedia =\n            local.searchMediaDict[localStorage.utility2_itunes_search_searchMedia] || '#movie';\n        document.querySelector('.searchSortSelect').selectedIndex = Math.min(\n            localStorage.utility2_itunes_search_searchSort || 0,\n            document.querySelector('.searchSortSelect').length\n        );\n        document.querySelector('.searchTermInput').value =\n            localStorage.utility2_itunes_search_searchTerm || '';\n        // reload-ui\n        document.querySelector('[href=\"' + localStorage.utility2_itunes_search_searchMedia +\n            '\"]').click();\n        break;\n    }\n}());\n","/home/travis/build/kaizhu256/node-itunes-search-lite/example.js":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\nexample.js\n\nthis script will run a web demo of itunes-search-lite\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install itunes-search-lite && PORT=8081 node example.js\n    3. open a browser to http://127.0.0.1:8081 and play with the web demo\n    4. edit this script to suit your needs\n*/\n\n\n\n/* istanbul instrument in package itunes_search */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_itunes_search\n            : global.utility2_moduleExports);\n        // init exports\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - init-test\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.maxHeight === '0px') {\n                    local.uiAnimateSlideDown(document.querySelector('#testReportDiv1'));\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    local.uiAnimateSlideUp(document.querySelector('#testReportDiv1'));\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - init-test\n    /* istanbul ignore next */\n    case 'node':\n        // init exports\n        module.exports = local;\n        // require builtins\n        Object.keys(process.binding('natives')).forEach(function (key) {\n            if (!local[key] && !(/\\/|^_|^sys$/).test(key)) {\n                local[key] = require(key);\n            }\n        });\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        [\n            'assets.index.css',\n            'assets.index.template.html',\n            'assets.swgg.swagger.json',\n            'assets.swgg.swagger.server.json'\n        ].forEach(function (file) {\n            file = '/' + file;\n            local.assetsDict[file] = local.assetsDict[file] || '';\n            if (local.fs.existsSync(local.__dirname + file)) {\n                local.assetsDict[file] = local.fs.readFileSync(\n                    local.__dirname + file,\n                    'utf8'\n                );\n            }\n        });\n        local.assetsDict['/'] =\n            local.assetsDict['/assets.example.html'] =\n            local.assetsDict['/assets.index.template.html']\n            .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                // jslint-hack\n                String(match0);\n                switch (match1) {\n                case 'npm_package_description':\n                    return 'the greatest app in the world!';\n                case 'npm_package_name':\n                    return 'itunes-search-lite';\n                case 'npm_package_nameLib':\n                    return 'itunes_search';\n                case 'npm_package_version':\n                    return '0.0.1';\n                default:\n                    return match0;\n                }\n            });\n        // init cli\n        if (module !== require.main || local.global.utility2_rollup) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.itunes_search.js'] =\n            local.assetsDict['/assets.itunes_search.js'] ||\n            local.fs.readFileSync(\n                local.itunes_search.__dirname + '/lib.itunes_search.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());"}